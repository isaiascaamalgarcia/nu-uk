package Login;

import DesignSoftware.FrameDesign;
import DesignSoftware.FormDesign;
import ModelDB.sesion;
import ModelDB.conexion;
import PuntodeVenta.SalesSoftwareAdmin;
import PuntodeVenta.SalesSoftwareEmpleado;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.KeyEvent;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/*
 *@author Shary Yareli Chuc Ku
 *Versión: 2.0
 *Fecha última modificación: 06-12-14
 */
//Clase que se utiliza para iniciar sesion de acuerdo al permiso dado.
public class Login extends javax.swing.JFrame {

    sesion s;
    private FormDesign shape;
    private FrameDesign img;
    private PuntodeVenta.SalesSoftwareEmpleado empleado;
    private PuntodeVenta.SalesSoftwareAdmin admin;
    Login estaVentana = this;
    String URL = "../Images/loginImages/";
    int x, y;

//    Constructor: Da formato de color al login y carga el metodo load().
    public Login() {
        this.getContentPane().setBackground(new Color(116, 16, 30));
        initComponents();
        load();
    }

//    Método que permite cargar el formato de diseño a los botones y al formulario.
    private void load() {
        shape = new FormDesign(this);
        img = new FrameDesign(URL + "button.png");
        img.addLabel(login);
        img = new FrameDesign(URL + "buttonMinimize.png");
        img.addButton(minimizar);
        img = new FrameDesign(URL + "buttonClose.png");
        img.addButton(cerrar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userInput = new javax.swing.JTextField();
        login = new javax.swing.JLabel();
        passInput = new javax.swing.JPasswordField();
        minimizar = new javax.swing.JButton();
        cerrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setBounds(new java.awt.Rectangle(500, 100, 0, 0));
        setMinimumSize(new java.awt.Dimension(450, 259));
        setName("divMain"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        userInput.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        userInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userInput.setText("USUARIO");
        userInput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(116, 16, 30), 2, true));
        userInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userInputFocusLost(evt);
            }
        });
        userInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userInputKeyPressed(evt);
            }
        });

        login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginMouseClicked(evt);
            }
        });

        passInput.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        passInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passInput.setText("password");
        passInput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(116, 16, 30), 2, true));
        passInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passInputFocusLost(evt);
            }
        });
        passInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passInputKeyPressed(evt);
            }
        });

        minimizar.setBorder(null);
        minimizar.setBorderPainted(false);
        minimizar.setContentAreaFilled(false);
        minimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizarMouseExited(evt);
            }
        });
        minimizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizarActionPerformed(evt);
            }
        });

        cerrar.setBorder(null);
        cerrar.setBorderPainted(false);
        cerrar.setContentAreaFilled(false);
        cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cerrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cerrarMouseExited(evt);
            }
        });
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });

        fondo.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/loginImages/Login.png"))); // NOI18N
        fondo.setAlignmentY(0.0F);
        fondo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(400, 400, 400)
                .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(360, 360, 360)
                .addComponent(minimizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(passInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(fondo)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(passInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minimizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//  Evento que al cliclear permite hacer comparaciones del usuario y contraseña ingresado.
//  Llma al método de manejarLogin, esto es para la cuestión de permisos.
    private void loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMouseClicked
        manejarLogin();
        if ("Acceso Denegado".equals(s.getAcceso()) || evt.isMetaDown()) {
            img = new FrameDesign(URL + "buttonDenied.png");
            img.addLabel(login);
        } else if ("Acceso Concedido".equals(s.getAcceso())) {
            img = new FrameDesign(URL + "buttonAccess.png");
            img.addLabel(login);
            System.out.println(s.getAcceso());
            System.out.println(s.getPermisos());
            if (s.getPermisos().equals("0")) {
                empleado = new SalesSoftwareEmpleado(userInput.getText());
                empleado.setLayout(new AbsoluteLayout());
                empleado.setVisible(true);
                estaVentana.hide();
            } else {
                admin = new SalesSoftwareAdmin(userInput.getText());
                admin.setLayout(new AbsoluteLayout());
                admin.setVisible(true);
                estaVentana.hide();
            }
        }
    }//GEN-LAST:event_loginMouseClicked

//    Método que llama a la clase "sesion", esto verifica los permisos de administrador y vendedor.
    private void manejarLogin() {
        String user = this.userInput.getText(), pass = this.passInput.getText();
        s = new sesion(user, pass);
    }

    private void userInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userInputFocusGained
        this.userInput.selectAll();
        userInput.setText("");
    }//GEN-LAST:event_userInputFocusGained

    private void passInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passInputFocusGained
        this.passInput.selectAll();
        passInput.setText("");
    }//GEN-LAST:event_passInputFocusGained

    private void userInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userInputKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                passInput.requestFocus();
            } catch (HeadlessException e) {
            }
        }
    }//GEN-LAST:event_userInputKeyPressed

    private void passInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passInputKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                login.requestFocus();
            } catch (HeadlessException e) {
            }
        }
    }//GEN-LAST:event_passInputKeyPressed

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        Point point = MouseInfo.getPointerInfo().getLocation();
        setLocation(point.x - x, point.y - y);
    }//GEN-LAST:event_jLabel1MouseDragged

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_cerrarActionPerformed

    private void minimizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimizarActionPerformed
        setExtendedState(ICONIFIED);
    }//GEN-LAST:event_minimizarActionPerformed

    private void userInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userInputFocusLost
        try {
            if ("".equals(userInput.getText())) {
                userInput.setText("USUARIO");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_userInputFocusLost

    private void passInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passInputFocusLost
        try {
            if ("".equals(passInput.getText())) {
                passInput.setText("********");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_passInputFocusLost

    private void minimizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizarMouseEntered
        try {
            img = new FrameDesign(URL + "buttonMinimize1.png");
            img.addButton(minimizar);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_minimizarMouseEntered

    private void minimizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizarMouseExited
        try {
            img = new FrameDesign(URL + "buttonMinimize.png");
            img.addButton(minimizar);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_minimizarMouseExited

    private void cerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarMouseEntered
        try {
            img = new FrameDesign(URL + "buttonClose1.png");
            img.addButton(cerrar);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cerrarMouseEntered

    private void cerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarMouseExited
        try {
            img = new FrameDesign(URL + "buttonClose.png");
            img.addButton(cerrar);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cerrarMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cerrar;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel login;
    private javax.swing.JButton minimizar;
    private javax.swing.JPasswordField passInput;
    private javax.swing.JTextField userInput;
    // End of variables declaration//GEN-END:variables
    private conexion con;
}
